name: main

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build_tarball:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: install dependencies
        run: 'sudo apt-get install -y autoconf-archive libusb-1.0-0-dev
                                      rpm build-essential devscripts
                                      debhelper'
      - name: autoreconf
        run: autoreconf -ivf
      - name: configure
        run: ./configure --enable-debug
      - name: make
        run: make
      - name: make check
        run: make check
      - name: make distcheck
        run: 'make distcheck &&
                { echo -n TARBALL=; realpath -e *.tar.gz; } >> $GITHUB_ENV'
      - name: upload tarball
        uses: actions/upload-artifact@v2
        with:
          path: ${{env.TARBALL}}
          name: tarball
          if-no-files-found: error

  build_debian_package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: install dependencies
        run: sudo apt-get install -y build-essential devscripts debhelper equivs
      - name: extract build dependencies
        run: 'mk-build-deps debian/control &&
                { echo -n BUILD_DEPS_DEB=; realpath -e *.deb; } >> $GITHUB_ENV'
      - name: install build dependencies
        run: 'sudo apt-get install -y "${{env.BUILD_DEPS_DEB}}"'
      - name: build package files
        run: 'dpkg-buildpackage -us -uc -ui &&
                { echo -n PACKAGE_DIR=; realpath -e ..; } >> $GITHUB_ENV'
      - name: lint package files
        run: 'lintian --profile=debian ../*.changes'
      - name: upload package files
        uses: actions/upload-artifact@v2
        with:
          path: |
            ${{env.PACKAGE_DIR}}/*.deb
            ${{env.PACKAGE_DIR}}/*.ddeb
            ${{env.PACKAGE_DIR}}/*.changes
          name: debian_package
          if-no-files-found: error

  build_rpm_package:
    runs-on: ubuntu-latest
    container: fedora
    needs: build_tarball
    steps:
      - name: install dependencies
        run: 'sudo dnf install -y "dnf-command(builddep)" rpmdevtools rpmlint'
      - name: download tarball
        uses: actions/download-artifact@v2
        with:
          name: tarball
      - name: build source files
        run: 'rpmbuild -ts *.tar.gz'
      - name: install build dependencies
        run: 'sudo dnf builddep -y "$HOME/rpmbuild/SRPMS/"*'
      - name: build binary files
        run: 'rpmbuild -tb *.tar.gz'
      - name: lint all files
        run: 'rpmlint "$HOME/rpmbuild"/*RPMS/* &&
                { echo -n PACKAGE_DIR=; echo "$HOME/rpmbuild"; } >> $GITHUB_ENV'
      - name: upload package files
        uses: actions/upload-artifact@v2
        with:
          path: ${{env.PACKAGE_DIR}}/*RPMS/*
          name: rpm_package
          if-no-files-found: error
